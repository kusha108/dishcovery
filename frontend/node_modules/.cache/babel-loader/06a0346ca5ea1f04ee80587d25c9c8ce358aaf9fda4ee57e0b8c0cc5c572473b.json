{"ast":null,"code":"// import React, { useState } from \"react\";\n// import {\n//   Container,\n//   TextField,\n//   Button,\n//   Typography,\n//   Snackbar,\n//   LinearProgress,\n//   Box,\n//   Card,\n//   CardMedia,\n// } from \"@mui/material\";\n// import CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n// import api from \"../api/axios\";\n\n// export default function AddRecipe() {\n//   const [form, setForm] = useState({\n//     title: \"\",\n//     description: \"\",\n//     ingredients: \"\",\n//     steps: \"\",\n//   });\n//   const [image, setImage] = useState(null);\n//   const [preview, setPreview] = useState(null);\n//   const [uploading, setUploading] = useState(false);\n//   const [alert, setAlert] = useState(false);\n//   const [error, setError] = useState(false);\n\n//   // ✅ Handle text input changes\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   // ✅ Handle image preview\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     setImage(file);\n//     setPreview(URL.createObjectURL(file));\n//   };\n\n//   // ✅ Submit handler\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem(\"token\");\n\n//     // ✅ Build FormData properly\n//     const data = new FormData();\n//     data.append(\"title\", form.title);\n//     data.append(\"description\", form.description);\n//     data.append(\n//       \"ingredients\",\n//       JSON.stringify(form.ingredients.split(\",\").map((i) => i.trim()))\n//     );\n//     data.append(\n//       \"steps\",\n//       JSON.stringify(form.steps.split(\",\").map((s) => s.trim()))\n//     );\n//     if (image) data.append(\"image\", image);\n\n//     try {\n//       setUploading(true);\n//       await api.post(\"/recipes\", data, {\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//         onUploadProgress: (progressEvent) => {\n//           const progress = Math.round(\n//             (progressEvent.loaded * 100) / progressEvent.total\n//           );\n//           console.log(`Upload Progress: ${progress}%`);\n//         },\n//       });\n\n//       // ✅ Success\n//       setUploading(false);\n//       setAlert(true);\n//       setForm({ title: \"\", description: \"\", ingredients: \"\", steps: \"\" });\n//       setImage(null);\n//       setPreview(null);\n//     } catch (error) {\n//       console.error(\"❌ Upload failed:\", error.response?.data || error.message);\n//       setUploading(false);\n//       setError(true);\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" sx={{ mt: 5, mb: 5 }}>\n//       <Card\n//         sx={{\n//           p: 3,\n//           boxShadow: 5,\n//           borderRadius: 3,\n//           background: \"#fafafa\",\n//         }}\n//       >\n//         <Typography\n//           variant=\"h4\"\n//           fontWeight={700}\n//           mb={3}\n//           sx={{ textAlign: \"center\", color: \"#2C2C2C\" }}\n//         >\n//           Add New Recipe\n//         </Typography>\n\n//         <form onSubmit={handleSubmit}>\n//           <TextField\n//             label=\"Title\"\n//             name=\"title\"\n//             fullWidth\n//             required\n//             margin=\"normal\"\n//             value={form.title}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             label=\"Description\"\n//             name=\"description\"\n//             fullWidth\n//             multiline\n//             rows={3}\n//             margin=\"normal\"\n//             value={form.description}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             label=\"Ingredients (comma separated)\"\n//             name=\"ingredients\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={form.ingredients}\n//             onChange={handleChange}\n//           />\n//           <TextField\n//             label=\"Steps (comma separated)\"\n//             name=\"steps\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={form.steps}\n//             onChange={handleChange}\n//           />\n\n//           {/* ✅ Image Upload + Preview */}\n//           <Box mt={2} mb={2}>\n//             <Button\n//               variant=\"contained\"\n//               component=\"label\"\n//               sx={{\n//                 backgroundColor: \"#2C2C2C\",\n//                 \"&:hover\": { backgroundColor: \"#444\" },\n//               }}\n//             >\n//               Upload Image\n//               <input\n//                 hidden\n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 onChange={handleImageChange}\n//               />\n//             </Button>\n\n//             {preview && (\n//               <CardMedia\n//                 component=\"img\"\n//                 image={preview}\n//                 alt=\"Preview\"\n//                 sx={{\n//                   mt: 2,\n//                   borderRadius: 2,\n//                   maxHeight: 200,\n//                   objectFit: \"cover\",\n//                 }}\n//               />\n//             )}\n//           </Box>\n\n//           {uploading && (\n//             <Box sx={{ width: \"100%\", mb: 2 }}>\n//               <LinearProgress color=\"success\" />\n//             </Box>\n//           )}\n\n//           <Button\n//             type=\"submit\"\n//             variant=\"contained\"\n//             color=\"success\"\n//             fullWidth\n//             sx={{ mt: 2, py: 1.2, fontWeight: 600 }}\n//           >\n//             Submit\n//           </Button>\n//         </form>\n//       </Card>\n\n//       {/* ✅ Success Snackbar */}\n//       <Snackbar\n//         open={alert}\n//         autoHideDuration={2500}\n//         onClose={() => setAlert(false)}\n//         message={\n//           <span style={{ display: \"flex\", alignItems: \"center\" }}>\n//             <CheckCircleIcon sx={{ mr: 1, color: \"#4caf50\" }} /> Recipe added\n//             successfully!\n//           </span>\n//         }\n//       />\n\n//       {/* ❌ Error Snackbar */}\n//       <Snackbar\n//         open={error}\n//         autoHideDuration={2500}\n//         onClose={() => setError(false)}\n//         message=\"Upload failed! Please check your inputs or try again.\"\n//         sx={{ backgroundColor: \"#ff1744\" }}\n//       />\n//     </Container>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/dishcovery/frontend/src/pages/AddRecipe.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import {\r\n//   Container,\r\n//   TextField,\r\n//   Button,\r\n//   Typography,\r\n//   Snackbar,\r\n//   LinearProgress,\r\n//   Box,\r\n//   Card,\r\n//   CardMedia,\r\n// } from \"@mui/material\";\r\n// import CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\n// import api from \"../api/axios\";\r\n\r\n// export default function AddRecipe() {\r\n//   const [form, setForm] = useState({\r\n//     title: \"\",\r\n//     description: \"\",\r\n//     ingredients: \"\",\r\n//     steps: \"\",\r\n//   });\r\n//   const [image, setImage] = useState(null);\r\n//   const [preview, setPreview] = useState(null);\r\n//   const [uploading, setUploading] = useState(false);\r\n//   const [alert, setAlert] = useState(false);\r\n//   const [error, setError] = useState(false);\r\n\r\n//   // ✅ Handle text input changes\r\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n//   // ✅ Handle image preview\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     setImage(file);\r\n//     setPreview(URL.createObjectURL(file));\r\n//   };\r\n\r\n//   // ✅ Submit handler\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const token = localStorage.getItem(\"token\");\r\n\r\n//     // ✅ Build FormData properly\r\n//     const data = new FormData();\r\n//     data.append(\"title\", form.title);\r\n//     data.append(\"description\", form.description);\r\n//     data.append(\r\n//       \"ingredients\",\r\n//       JSON.stringify(form.ingredients.split(\",\").map((i) => i.trim()))\r\n//     );\r\n//     data.append(\r\n//       \"steps\",\r\n//       JSON.stringify(form.steps.split(\",\").map((s) => s.trim()))\r\n//     );\r\n//     if (image) data.append(\"image\", image);\r\n\r\n//     try {\r\n//       setUploading(true);\r\n//       await api.post(\"/recipes\", data, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//         onUploadProgress: (progressEvent) => {\r\n//           const progress = Math.round(\r\n//             (progressEvent.loaded * 100) / progressEvent.total\r\n//           );\r\n//           console.log(`Upload Progress: ${progress}%`);\r\n//         },\r\n//       });\r\n\r\n//       // ✅ Success\r\n//       setUploading(false);\r\n//       setAlert(true);\r\n//       setForm({ title: \"\", description: \"\", ingredients: \"\", steps: \"\" });\r\n//       setImage(null);\r\n//       setPreview(null);\r\n//     } catch (error) {\r\n//       console.error(\"❌ Upload failed:\", error.response?.data || error.message);\r\n//       setUploading(false);\r\n//       setError(true);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"sm\" sx={{ mt: 5, mb: 5 }}>\r\n//       <Card\r\n//         sx={{\r\n//           p: 3,\r\n//           boxShadow: 5,\r\n//           borderRadius: 3,\r\n//           background: \"#fafafa\",\r\n//         }}\r\n//       >\r\n//         <Typography\r\n//           variant=\"h4\"\r\n//           fontWeight={700}\r\n//           mb={3}\r\n//           sx={{ textAlign: \"center\", color: \"#2C2C2C\" }}\r\n//         >\r\n//           Add New Recipe\r\n//         </Typography>\r\n\r\n//         <form onSubmit={handleSubmit}>\r\n//           <TextField\r\n//             label=\"Title\"\r\n//             name=\"title\"\r\n//             fullWidth\r\n//             required\r\n//             margin=\"normal\"\r\n//             value={form.title}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             label=\"Description\"\r\n//             name=\"description\"\r\n//             fullWidth\r\n//             multiline\r\n//             rows={3}\r\n//             margin=\"normal\"\r\n//             value={form.description}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             label=\"Ingredients (comma separated)\"\r\n//             name=\"ingredients\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={form.ingredients}\r\n//             onChange={handleChange}\r\n//           />\r\n//           <TextField\r\n//             label=\"Steps (comma separated)\"\r\n//             name=\"steps\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={form.steps}\r\n//             onChange={handleChange}\r\n//           />\r\n\r\n//           {/* ✅ Image Upload + Preview */}\r\n//           <Box mt={2} mb={2}>\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               component=\"label\"\r\n//               sx={{\r\n//                 backgroundColor: \"#2C2C2C\",\r\n//                 \"&:hover\": { backgroundColor: \"#444\" },\r\n//               }}\r\n//             >\r\n//               Upload Image\r\n//               <input\r\n//                 hidden\r\n//                 type=\"file\"\r\n//                 accept=\"image/*\"\r\n//                 onChange={handleImageChange}\r\n//               />\r\n//             </Button>\r\n\r\n//             {preview && (\r\n//               <CardMedia\r\n//                 component=\"img\"\r\n//                 image={preview}\r\n//                 alt=\"Preview\"\r\n//                 sx={{\r\n//                   mt: 2,\r\n//                   borderRadius: 2,\r\n//                   maxHeight: 200,\r\n//                   objectFit: \"cover\",\r\n//                 }}\r\n//               />\r\n//             )}\r\n//           </Box>\r\n\r\n//           {uploading && (\r\n//             <Box sx={{ width: \"100%\", mb: 2 }}>\r\n//               <LinearProgress color=\"success\" />\r\n//             </Box>\r\n//           )}\r\n\r\n//           <Button\r\n//             type=\"submit\"\r\n//             variant=\"contained\"\r\n//             color=\"success\"\r\n//             fullWidth\r\n//             sx={{ mt: 2, py: 1.2, fontWeight: 600 }}\r\n//           >\r\n//             Submit\r\n//           </Button>\r\n//         </form>\r\n//       </Card>\r\n\r\n//       {/* ✅ Success Snackbar */}\r\n//       <Snackbar\r\n//         open={alert}\r\n//         autoHideDuration={2500}\r\n//         onClose={() => setAlert(false)}\r\n//         message={\r\n//           <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n//             <CheckCircleIcon sx={{ mr: 1, color: \"#4caf50\" }} /> Recipe added\r\n//             successfully!\r\n//           </span>\r\n//         }\r\n//       />\r\n\r\n//       {/* ❌ Error Snackbar */}\r\n//       <Snackbar\r\n//         open={error}\r\n//         autoHideDuration={2500}\r\n//         onClose={() => setError(false)}\r\n//         message=\"Upload failed! Please check your inputs or try again.\"\r\n//         sx={{ backgroundColor: \"#ff1744\" }}\r\n//       />\r\n//     </Container>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}