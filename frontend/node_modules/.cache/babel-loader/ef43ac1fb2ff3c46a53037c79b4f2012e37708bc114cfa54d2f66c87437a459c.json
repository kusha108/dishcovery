{"ast":null,"code":"var _jsxFileName = \"C:\\\\dishcovery\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Container, TextField, Button, Typography, Snackbar } from \"@mui/material\";\n// import api from \"../api/axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function Login() {\n//   const [form, setForm] = useState({ email: \"\", password: \"\" });\n//   const [alert, setAlert] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await api.post(\"/auth/login\", form);\n//       localStorage.setItem(\"token\", res.data.token);\n//       setAlert(true);\n//       setTimeout(() => navigate(\"/recipes\"), 1500);\n//     } catch {\n//       alert(\"Invalid credentials\");\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"xs\" sx={{ mt: 8 }}>\n//       <Typography variant=\"h4\" fontWeight={600} mb={3} textAlign=\"center\">\n//         Login\n//       </Typography>\n//       <form onSubmit={handleSubmit}>\n//         <TextField label=\"Email\" name=\"email\" fullWidth margin=\"normal\" onChange={(e) => setForm({ ...form, email: e.target.value })} />\n//         <TextField label=\"Password\" type=\"password\" name=\"password\" fullWidth margin=\"normal\" onChange={(e) => setForm({ ...form, password: e.target.value })} />\n//         <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 2 }}>\n//           Login\n//         </Button>\n//       </form>\n//       <Snackbar open={alert} autoHideDuration={1500} message=\"Login successful!\" />\n//     </Container>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { Container, TextField, Button, Typography, Snackbar } from \"@mui/material\";\nimport api from \"../api/axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [alert, setAlert] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // ✅ Send login request to backend\n      const res = await api.post(\"/auth/login\", form);\n\n      // ✅ Save token + user in localStorage\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n      console.log(\"✅ Logged in User:\", res.data.user); // Debugging\n\n      // ✅ Show success snackbar and redirect\n      setAlert(true);\n      setTimeout(() => navigate(\"/recipes\"), 1500);\n    } catch (err) {\n      alert(\"Invalid credentials\");\n      console.error(\"❌ Login error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    sx: {\n      mt: 8,\n      p: 4,\n      boxShadow: 4,\n      borderRadius: 3,\n      backgroundColor: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: 700,\n      mb: 3,\n      textAlign: \"center\",\n      color: \"primary\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        fullWidth: true,\n        required: true,\n        margin: \"normal\",\n        onChange: e => setForm({\n          ...form,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        fullWidth: true,\n        required: true,\n        margin: \"normal\",\n        onChange: e => setForm({\n          ...form,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          py: 1.3,\n          fontWeight: 600,\n          textTransform: \"none\",\n          backgroundColor: \"#1976d2\",\n          \"&:hover\": {\n            backgroundColor: \"#125ea2\"\n          }\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alert,\n      autoHideDuration: 1500,\n      message: \"Login successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"4sM1Be7UVH0X0VNCrj52tlzTWxE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Typography","Snackbar","api","useNavigate","jsxDEV","_jsxDEV","Login","_s","form","setForm","email","password","alert","setAlert","navigate","handleSubmit","e","preventDefault","res","post","localStorage","setItem","data","token","JSON","stringify","user","console","log","setTimeout","err","error","maxWidth","sx","mt","p","boxShadow","borderRadius","backgroundColor","children","variant","fontWeight","mb","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","name","type","fullWidth","required","margin","onChange","target","value","py","textTransform","open","autoHideDuration","message","_c","$RefreshReg$"],"sources":["C:/dishcovery/frontend/src/pages/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Container, TextField, Button, Typography, Snackbar } from \"@mui/material\";\r\n// import api from \"../api/axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// export default function Login() {\r\n//   const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n//   const [alert, setAlert] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await api.post(\"/auth/login\", form);\r\n//       localStorage.setItem(\"token\", res.data.token);\r\n//       setAlert(true);\r\n//       setTimeout(() => navigate(\"/recipes\"), 1500);\r\n//     } catch {\r\n//       alert(\"Invalid credentials\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"xs\" sx={{ mt: 8 }}>\r\n//       <Typography variant=\"h4\" fontWeight={600} mb={3} textAlign=\"center\">\r\n//         Login\r\n//       </Typography>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <TextField label=\"Email\" name=\"email\" fullWidth margin=\"normal\" onChange={(e) => setForm({ ...form, email: e.target.value })} />\r\n//         <TextField label=\"Password\" type=\"password\" name=\"password\" fullWidth margin=\"normal\" onChange={(e) => setForm({ ...form, password: e.target.value })} />\r\n//         <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 2 }}>\r\n//           Login\r\n//         </Button>\r\n//       </form>\r\n//       <Snackbar open={alert} autoHideDuration={1500} message=\"Login successful!\" />\r\n//     </Container>\r\n//   );\r\n// }\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Snackbar,\r\n} from \"@mui/material\";\r\nimport api from \"../api/axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const [alert, setAlert] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // ✅ Send login request to backend\r\n      const res = await api.post(\"/auth/login\", form);\r\n\r\n      // ✅ Save token + user in localStorage\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n\r\n      console.log(\"✅ Logged in User:\", res.data.user); // Debugging\r\n\r\n      // ✅ Show success snackbar and redirect\r\n      setAlert(true);\r\n      setTimeout(() => navigate(\"/recipes\"), 1500);\r\n    } catch (err) {\r\n      alert(\"Invalid credentials\");\r\n      console.error(\"❌ Login error:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        mt: 8,\r\n        p: 4,\r\n        boxShadow: 4,\r\n        borderRadius: 3,\r\n        backgroundColor: \"#fff\",\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h4\"\r\n        fontWeight={700}\r\n        mb={3}\r\n        textAlign=\"center\"\r\n        color=\"primary\"\r\n      >\r\n        Login\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          fullWidth\r\n          required\r\n          margin=\"normal\"\r\n          onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          fullWidth\r\n          required\r\n          margin=\"normal\"\r\n          onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{\r\n            mt: 3,\r\n            py: 1.3,\r\n            fontWeight: 600,\r\n            textTransform: \"none\",\r\n            backgroundColor: \"#1976d2\",\r\n            \"&:hover\": { backgroundColor: \"#125ea2\" },\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n\r\n      <Snackbar\r\n        open={alert}\r\n        autoHideDuration={1500}\r\n        message=\"Login successful!\"\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}