{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import {\n//   Container,\n//   Typography,\n//   Box,\n//   Card,\n//   CardMedia,\n//   Divider,\n//   Button,\n//   Dialog,\n//   DialogActions,\n//   DialogContent,\n//   DialogContentText,\n//   DialogTitle,\n// } from \"@mui/material\";\n// import DeleteIcon from \"@mui/icons-material/Delete\";\n// import api from \"../api/axios\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n\n// export default function RecipeDetail() {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [openDialog, setOpenDialog] = useState(false);\n//   const backendURL = \"http://localhost:5000\";\n//   const navigate = useNavigate();\n\n//   const token = localStorage.getItem(\"token\");\n//   const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n\n//   // ✅ Fetch recipe by ID\n//   useEffect(() => {\n//     const fetchRecipe = async () => {\n//       try {\n//         const res = await api.get(`/recipes/${id}`);\n//         setRecipe(res.data);\n//       } catch (err) {\n//         console.error(\"❌ Error fetching recipe:\", err);\n//       }\n//     };\n//     fetchRecipe();\n//   }, [id]);\n\n//   // ✅ Delete recipe handler\n//   const handleDelete = async () => {\n//     try {\n//       await api.delete(`/recipes/${id}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       alert(\"✅ Recipe deleted successfully!\");\n//       navigate(\"/recipes\");\n//     } catch (err) {\n//       console.error(\"❌ Error deleting recipe:\", err);\n//       alert(\"Failed to delete recipe. Try again.\");\n//     } finally {\n//       setOpenDialog(false);\n//     }\n//   };\n\n//   if (!recipe)\n//     return (\n//       <Typography align=\"center\" mt={5}>\n//         Loading recipe details...\n//       </Typography>\n//     );\n\n//   return (\n//     <Container sx={{ mt: 5, mb: 5 }}>\n//       <Card sx={{ boxShadow: 5, borderRadius: 3, p: 3 }}>\n//         {recipe.image && (\n//           <CardMedia\n//             component=\"img\"\n//             image={`${backendURL}/${recipe.image}`}\n//             alt={recipe.title}\n//             sx={{\n//               borderRadius: 2,\n//               mb: 3,\n//               maxHeight: 400,\n//               objectFit: \"cover\",\n//             }}\n//             onError={(e) => {\n//               e.target.onerror = null;\n//               e.target.src =\n//                 \"https://via.placeholder.com/600x400.png?text=Image+Not+Available\";\n//             }}\n//           />\n//         )}\n\n//         <Typography variant=\"h4\" fontWeight={700}>\n//           {recipe.title}\n//         </Typography>\n\n//         <Typography\n//           variant=\"subtitle1\"\n//           color=\"text.secondary\"\n//           sx={{ mt: 1, mb: 2 }}\n//         >\n//           👨‍🍳 By {recipe.author?.name || \"Anonymous\"}\n//         </Typography>\n\n//         <Divider sx={{ my: 2 }} />\n\n//         <Typography\n//           variant=\"body1\"\n//           sx={{ mb: 3, fontSize: \"1rem\", lineHeight: 1.6 }}\n//         >\n//           {recipe.description}\n//         </Typography>\n\n//         <Typography variant=\"h6\" sx={{ mt: 3 }}>\n//           🧂 Ingredients:\n//         </Typography>\n//         <Box component=\"ul\" sx={{ pl: 3 }}>\n//           {recipe.ingredients.map((item, index) => (\n//             <li key={index}>\n//               <Typography variant=\"body2\">{item}</Typography>\n//             </li>\n//           ))}\n//         </Box>\n\n//         <Typography variant=\"h6\" sx={{ mt: 3 }}>\n//           👨‍🍳 Steps:\n//         </Typography>\n//         <Box component=\"ol\" sx={{ pl: 3 }}>\n//           {recipe.steps.map((step, index) => (\n//             <li key={index}>\n//               <Typography variant=\"body2\">{step}</Typography>\n//             </li>\n//           ))}\n//         </Box>\n\n//         {/* ✅ Delete button (only visible to recipe owner) */}\n//         {user?._id === recipe.author?._id && (\n//           <Box sx={{ mt: 4 }}>\n//             <Button\n//               variant=\"contained\"\n//               color=\"error\"\n//               startIcon={<DeleteIcon />}\n//               onClick={() => setOpenDialog(true)}\n//               sx={{ textTransform: \"none\", fontWeight: 600 }}\n//             >\n//               Delete Recipe\n//             </Button>\n//           </Box>\n//         )}\n//       </Card>\n\n//       {/* ✅ Confirmation Dialog */}\n//       <Dialog\n//         open={openDialog}\n//         onClose={() => setOpenDialog(false)}\n//         aria-labelledby=\"delete-dialog-title\"\n//       >\n//         <DialogTitle id=\"delete-dialog-title\">Confirm Deletion</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Are you sure you want to delete this recipe? This action cannot be\n//             undone.\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={() => setOpenDialog(false)} color=\"primary\">\n//             Cancel\n//           </Button>\n//           <Button onClick={handleDelete} color=\"error\" variant=\"contained\">\n//             Delete\n//           </Button>\n//         </DialogActions>\n//       </Dialog>\n//     </Container>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/dishcovery/frontend/src/pages/RecipeDetail.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   Container,\r\n//   Typography,\r\n//   Box,\r\n//   Card,\r\n//   CardMedia,\r\n//   Divider,\r\n//   Button,\r\n//   Dialog,\r\n//   DialogActions,\r\n//   DialogContent,\r\n//   DialogContentText,\r\n//   DialogTitle,\r\n// } from \"@mui/material\";\r\n// import DeleteIcon from \"@mui/icons-material/Delete\";\r\n// import api from \"../api/axios\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n// export default function RecipeDetail() {\r\n//   const { id } = useParams();\r\n//   const [recipe, setRecipe] = useState(null);\r\n//   const [openDialog, setOpenDialog] = useState(false);\r\n//   const backendURL = \"http://localhost:5000\";\r\n//   const navigate = useNavigate();\r\n\r\n//   const token = localStorage.getItem(\"token\");\r\n//   const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n\r\n//   // ✅ Fetch recipe by ID\r\n//   useEffect(() => {\r\n//     const fetchRecipe = async () => {\r\n//       try {\r\n//         const res = await api.get(`/recipes/${id}`);\r\n//         setRecipe(res.data);\r\n//       } catch (err) {\r\n//         console.error(\"❌ Error fetching recipe:\", err);\r\n//       }\r\n//     };\r\n//     fetchRecipe();\r\n//   }, [id]);\r\n\r\n//   // ✅ Delete recipe handler\r\n//   const handleDelete = async () => {\r\n//     try {\r\n//       await api.delete(`/recipes/${id}`, {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n//       alert(\"✅ Recipe deleted successfully!\");\r\n//       navigate(\"/recipes\");\r\n//     } catch (err) {\r\n//       console.error(\"❌ Error deleting recipe:\", err);\r\n//       alert(\"Failed to delete recipe. Try again.\");\r\n//     } finally {\r\n//       setOpenDialog(false);\r\n//     }\r\n//   };\r\n\r\n//   if (!recipe)\r\n//     return (\r\n//       <Typography align=\"center\" mt={5}>\r\n//         Loading recipe details...\r\n//       </Typography>\r\n//     );\r\n\r\n//   return (\r\n//     <Container sx={{ mt: 5, mb: 5 }}>\r\n//       <Card sx={{ boxShadow: 5, borderRadius: 3, p: 3 }}>\r\n//         {recipe.image && (\r\n//           <CardMedia\r\n//             component=\"img\"\r\n//             image={`${backendURL}/${recipe.image}`}\r\n//             alt={recipe.title}\r\n//             sx={{\r\n//               borderRadius: 2,\r\n//               mb: 3,\r\n//               maxHeight: 400,\r\n//               objectFit: \"cover\",\r\n//             }}\r\n//             onError={(e) => {\r\n//               e.target.onerror = null;\r\n//               e.target.src =\r\n//                 \"https://via.placeholder.com/600x400.png?text=Image+Not+Available\";\r\n//             }}\r\n//           />\r\n//         )}\r\n\r\n//         <Typography variant=\"h4\" fontWeight={700}>\r\n//           {recipe.title}\r\n//         </Typography>\r\n\r\n//         <Typography\r\n//           variant=\"subtitle1\"\r\n//           color=\"text.secondary\"\r\n//           sx={{ mt: 1, mb: 2 }}\r\n//         >\r\n//           👨‍🍳 By {recipe.author?.name || \"Anonymous\"}\r\n//         </Typography>\r\n\r\n//         <Divider sx={{ my: 2 }} />\r\n\r\n//         <Typography\r\n//           variant=\"body1\"\r\n//           sx={{ mb: 3, fontSize: \"1rem\", lineHeight: 1.6 }}\r\n//         >\r\n//           {recipe.description}\r\n//         </Typography>\r\n\r\n//         <Typography variant=\"h6\" sx={{ mt: 3 }}>\r\n//           🧂 Ingredients:\r\n//         </Typography>\r\n//         <Box component=\"ul\" sx={{ pl: 3 }}>\r\n//           {recipe.ingredients.map((item, index) => (\r\n//             <li key={index}>\r\n//               <Typography variant=\"body2\">{item}</Typography>\r\n//             </li>\r\n//           ))}\r\n//         </Box>\r\n\r\n//         <Typography variant=\"h6\" sx={{ mt: 3 }}>\r\n//           👨‍🍳 Steps:\r\n//         </Typography>\r\n//         <Box component=\"ol\" sx={{ pl: 3 }}>\r\n//           {recipe.steps.map((step, index) => (\r\n//             <li key={index}>\r\n//               <Typography variant=\"body2\">{step}</Typography>\r\n//             </li>\r\n//           ))}\r\n//         </Box>\r\n\r\n//         {/* ✅ Delete button (only visible to recipe owner) */}\r\n//         {user?._id === recipe.author?._id && (\r\n//           <Box sx={{ mt: 4 }}>\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               color=\"error\"\r\n//               startIcon={<DeleteIcon />}\r\n//               onClick={() => setOpenDialog(true)}\r\n//               sx={{ textTransform: \"none\", fontWeight: 600 }}\r\n//             >\r\n//               Delete Recipe\r\n//             </Button>\r\n//           </Box>\r\n//         )}\r\n//       </Card>\r\n\r\n//       {/* ✅ Confirmation Dialog */}\r\n//       <Dialog\r\n//         open={openDialog}\r\n//         onClose={() => setOpenDialog(false)}\r\n//         aria-labelledby=\"delete-dialog-title\"\r\n//       >\r\n//         <DialogTitle id=\"delete-dialog-title\">Confirm Deletion</DialogTitle>\r\n//         <DialogContent>\r\n//           <DialogContentText>\r\n//             Are you sure you want to delete this recipe? This action cannot be\r\n//             undone.\r\n//           </DialogContentText>\r\n//         </DialogContent>\r\n//         <DialogActions>\r\n//           <Button onClick={() => setOpenDialog(false)} color=\"primary\">\r\n//             Cancel\r\n//           </Button>\r\n//           <Button onClick={handleDelete} color=\"error\" variant=\"contained\">\r\n//             Delete\r\n//           </Button>\r\n//         </DialogActions>\r\n//       </Dialog>\r\n//     </Container>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}